#!/bin/bash

# Shows summary information from Wikipedia

# parse arguments

TERM=""
SUBSECTION=""

usage() {
  echo "Usage: wiki SEARCHTERM [SUBSECTION]"
  exit
}

if [ "$#" -lt 1 ]; then 
  usage
fi

# ARG PARSING
if [ -n "$1" ]; then
  TERM=$1
fi

if [ -n "$2" ]; then
  SUBSECTION=$2
fi

# Search for page in wikipedia
# -L follows redirects on the search and -s prevents the progress bar
res=$(curl -L -s "https://en.wikipedia.org/wiki/?search=$1")

# Search within the Body HTML to find the first p tag that isn't within a table element.
lineno=$(echo "$res" | grep -m 1 -n '<div class="mw-parser-output">' | sed '/^$/d' | cut -d : -f 1)
intable=false
while true ;
do
  line=$(sed "${lineno}q;d" <<< "$res")
  if [[ $line =~ .*"<table".* ]]; then
    intable=true
  elif [ $intable = true  ] && [[ $line =~ .*"</table>".* ]]; then
    intable=false
  elif [ $intable = false ] && [[ $line =~ .*"<p>".* ]]; then
    break 
  fi
  ((lineno++))
done

# Strip off tags.
echo "First paragraph:"
line=$(sed "${lineno}q;d" <<< "$res")

# Print first paragraph
sed -e 's/<[^>]*>//g' <<< "$line"

# Print any h2s
echo "Headers:"
tail -n "+${lineno}" <<< "$res" | grep '<h2><span class="mw-headline"' | sed -e 's/<[^>]*>//g' | sed -e 's/\[edit\]//g'

# Get the subsections beneath our current lineno

# TODO convert HTML escape coded characters to ascii